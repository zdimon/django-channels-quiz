{"version":3,"sources":["reportWebVitals.ts","Request.ts","SocketConnection.ts","components/Question.tsx","components/Sticker.tsx","components/LoginForm.tsx","components/MessageForm.tsx","components/Message.tsx","components/MessageBox.tsx","components/CurrentPlayer.tsx","components/Player.tsx","components/PlayerList.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","serverUrl","Request","url","axios","get","response","data","post","SocketConnection","timer","websocket","newMessage$","newQuestion$","updateAccount$","newUser$","this","Subject","wsConnect","instance","clearInterval","WebSocket","onerror","evt","setTimeout","onmessage","message","msg","JSON","parse","console","log","type","next","onclose","event","socket","getInstance","Question","props","useEffect","subscribe","is_right","setQuestion","useState","question","answers","className","Sticker","current","setCurrent","width","alt","item","id","onClick","onSelectSticker","src","get_url","LoginForm","stickers","setStickers","sticker","setSticker","username","setUsername","handleSelectSticker","onChange","target","value","map","el","key","length","sticker_id","name","localStorage","setItem","account","window","location","reload","alert","MessageForm","req","setMessage","submit","playername","getItem","placeholder","onKeyDown","e","aria-hidden","Message","playerimage","text","MessageBox","payload","setMessages","messages","CurrentPlayer","image","setImage","setAccount","removeItem","Player","user","href","PlayerList","payers","setPlayers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59f34225.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { serverName } from './config';\n\n// const serverUrl = 'http://localhost:7777/v1/quiz/';\nconst serverUrl = `http://quizapi.webmonstr.com/v1/quiz/`;\n\n\n\nexport class Request {\n\n    async get(url: string) {\n        let response = await axios.get(`${serverUrl}${url}`)\n        return response.data;\n    }\n\n    async post(url: string, data: any) {\n        let response = await axios.post(`${serverUrl}${url}`,data)\n        return response.data;\n    }\n}","import { Subject } from 'rxjs';\nimport { serverName } from './config';\n\nexport class SocketConnection {\n   private static instance: SocketConnection;\n   timer:any = null;\n   websocket:any = null;\n   newMessage$: Subject<any>;\n   newQuestion$: Subject<any>;\n   updateAccount$: Subject<any>;\n   newUser$: Subject<any>;\n\n   public static getInstance(): SocketConnection {\n        if (!SocketConnection.instance) {\n            SocketConnection.instance = new SocketConnection();\n        }\n        return SocketConnection.instance;\n    }\n\n   constructor() {\n    this.newMessage$ = new Subject();\n    this.newQuestion$ = new Subject();\n    this.updateAccount$ = new Subject();\n    this.newUser$ = new Subject();\n    this.wsConnect();\n   }\n\n   wsConnect() {\n    clearInterval(this.timer);\n    //this.websocket = new WebSocket('ws://localhost:7777/quiz/');\n    this.websocket = new WebSocket(`ws://quizapi.webmonstr.com:7777/quiz/`);\n\n    this.websocket.onerror = (evt: any) => {\n        this.timer = setTimeout(() => this.wsConnect(),2000);\n    }\n\n    this.websocket.onmessage = (message: any) => {\n        let msg = JSON.parse(message.data)\n        console.log(msg);\n        if(msg.type === 'message') {\n            this.newMessage$.next(msg.message);\n        }\n        if(msg.type === 'new_question') {\n            this.newQuestion$.next(msg);\n        }\n        if(msg.type === 'update_account') {\n            this.updateAccount$.next(msg);\n        }\n        if(msg.type === 'new_user') {\n            this.newUser$.next(msg);\n        }\n    }\n\n    this.websocket.onclose =  (event: any) => {\n        console.log('Close connection');\n        this.timer = setTimeout(() => this.wsConnect(),2000);\n    };\n   }\n}","import React from 'react';\nimport { Request } from '../Request';\nimport { useState, useEffect } from 'react';\nimport { SocketConnection } from '../SocketConnection';\n\nconst socket = SocketConnection.getInstance();\n\nexport function Question(props: any) {\n  useEffect(() => {\n    socket.newMessage$.subscribe((data: any) => {\n      if(data.is_right || data.type === 'new_question') {\n          const req = new Request();\n          req.get('get_current_question').then((data) => {\n            setQuestion(data);\n            });\n          }\n      });\n\n      socket.newQuestion$.subscribe((data: any) => {\n            const req = new Request();\n            req.get('get_current_question').then((data) => {\n              setQuestion(data);\n              });\n      });\n\n  },[])\n\n  // LeetCode CodeWars\n\n  const [question, setQuestion] = useState({\n    question: '',\n    answers: ''\n  });\n  useEffect(() => {\n    const req = new Request();\n    req.get('get_current_question').then((data) => {\n      setQuestion(data);\n    })\n  },[]);\n  return (\n    <div className=\"question\">\n        Вопрос: {question.question} \n    </div>\n  );\n}\n\n//({question.answers})\n","import React from 'react';\nimport { useState } from 'react';\n\nexport function Sticker(props:any) {\n  const [current, setCurrent] = useState(0);\n  var select = (id: number) => {\n    props.onSelectSticker(id); \n    setCurrent(id);\n  }\n  return (\n    <>\n    <img width=\"50\" \n    alt=\"\"\n    className={` ${props.item.id===current ? 'sticker-active': ''} `}\n    onClick={() => select(props.item.id)} \n    src={props.item.get_url} />\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport { Request } from '../Request';\nimport {Sticker} from './Sticker';\n \n\nexport function LoginForm() {\n  const [stickers, setStickers] = useState([]);\n  const [sticker, setSticker] = useState(0);\n  const [username, setUsername] = useState('');\n  \n  var handleChangeUsername = (evt:any) => {\n    setUsername(evt.target.value);\n  }\n\n  useEffect(() => {\n    let req = new Request();\n    req.get('sticker/list').then((data) => {\n       setStickers(data);\n    })\n   },[]);\n\n   var handleSelectSticker = (id: number) => {\n      setSticker(id);\n   }\n\n  var submit = () => {\n    if(sticker>0 && username.length>0){\n      let data = {\n        sticker_id: sticker,\n        name: username\n      }\n      let req = new Request();\n      req.post('player/join',data).then((data) => {\n        localStorage.setItem('username', username);\n        localStorage.setItem('image', data.sticker.get_url);\n        localStorage.setItem('account', data.account);\n        window.location.reload();\n      })\n    } else {\n      alert('Вы не указали имя или не выбрали картинку!')\n    }\n  }\n  return (\n    <div className=\"login-form\">\n      <p>\n        Цель игры быстрее всех написать правильный ответ на вопрос и заработать очки.\n      </p>\n      <p>\n        После 5 неправильных ответов вопрос меняется.\n      </p>\n      <p>Как вас зовут?</p>\n      <p><input onChange={handleChangeUsername} type=\"text\" className=\"round\" /></p>\n\n      <p>Выберите картинку</p>\n      <div className=\"stickers\">\n        { \n           stickers.map((el, key) => \n          <Sticker \n             onSelectSticker={handleSelectSticker} \n             item={el} \n             key={key}\n          />)\n        }\n      </div>\n      <button onClick={submit} id=\"chat-start\" className=\"btn btn btn-primary mt-6\">Начать игру. Удачи!</button>\n    </div>\n  );\n}\n\n","import React, {useState} from 'react';\nimport { Request } from '../Request';\n\nexport function MessageForm() {\n  const req = new Request();\n  const [message, setMessage] = useState('');\n  var handleChangeMessage = (evt:any) => {\n    setMessage(evt.target.value);\n  }\n\n  var submit = () => {\n      if (message.length > 0) {\n        let data = {\n            message: message,\n            playername: localStorage.getItem('username')\n        }\n        req.post('save_message', data).then((data) => {\n          setMessage('');\n        })\n      }\n  }\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === 'Enter') {\n      submit();\n    }\n  }\n\n  return (\n    <>\n    <input \n        type=\"text\" \n        className=\"form-control mr-3\" \n        placeholder=\"Введите ответ на вопрос\"\n        value={message}\n        onChange={handleChangeMessage}\n        onKeyDown={handleKeyDown}\n    />\n    <button onClick={submit} type=\"submit\" className=\"btn btn-primary d-flex align-items-center p-2\"><i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i><span className=\"d-none d-lg-block ml-1\">Send</span></button>\n    </>\n  );\n}\n\n","import React from 'react';\n\nexport function Message(props: any) {\n\n  return (\n\n    <div className={`chat ${props.message.is_right ? \"chat-left\" : \"\"}`}>\n    <div className=\"chat-user\">\n       <a className=\"avatar m-0\">\n          <img src={props.message.playerimage} alt=\"avatar\" className=\"avatar-35 \" />\n       </a>\n  <span className=\"chat-time mt-1\">{props.message.playername}</span>\n    </div>\n    <div className=\"chat-detail\">\n       <div className=\"chat-message\">\n          <p>{ props.message.text } {props.message.is_right}</p>\n       </div>\n    </div>\n  </div>\n  );\n}\n\n","import React from 'react';\nimport { Request } from '../Request';\nimport { useState, useEffect } from 'react';\nimport { SocketConnection } from '../SocketConnection';\nimport { Message } from './Message';\n\n\nconst socket = SocketConnection.getInstance();\n\nexport function MessageBox(props: any) {\n  useEffect(() => {\n    socket.newMessage$.subscribe((payload: any) => {\n        // const msg = [...messages] as any;\n        // msg.push(payload);\n        // setMessages(msg);\n        const req = new Request();\n        req.get('message/list').then((data) => {\n            setMessages(data);\n        })\n      });\n  },[])\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const req = new Request();\n    req.get('message/list').then((data) => {\n        setMessages(data);\n        console.log(data);\n    })\n  },[]);\n  return (\n    <div className=\"messages\">\n      { messages.map((el, key) => <Message key={key} message={el} />) }\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { SocketConnection } from '../SocketConnection';\nconst socket = SocketConnection.getInstance();\n\nexport function CurrentPlayer(props: any) {\n  const [image, setImage] = useState('');\n  const [account, setAccount] = useState(0);\n\n  useEffect(() => {\n    socket.updateAccount$.subscribe((payload: any) => {\n      console.log('update');\n        if(payload.message.name === localStorage.getItem('username')) {\n            console.log('asdqwadadsa');\n            // let newaccount = account+1;\n            setAccount(payload.message.account); \n            localStorage.setItem('account',payload.message.account);           \n        }\n      });\n  },[])\n\n  const exit = () => {\n    localStorage.removeItem('username');\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    setImage(localStorage.getItem('image') as string);\n    setAccount(localStorage.getItem('account') as unknown as number);\n  },[]);\n  return (\n    <>\n    <div className=\"avatar chat-user-profile m-0 mr-3\">\n        <img src=\"images/logo.png\" className=\"mylogo img-fluid\" alt=\"\" />\n        <img \n        src={image}\n        alt=\"avatar\" \n        className=\"avatar-50 \" />\n    </div>\n  <h5 className=\"mb-0\">{localStorage.getItem('username')}</h5>\n  &nbsp;<h5 className=\"player-account\"> Правильных ответов: {account}</h5>\n  <div className=\"float-right\">\n         \n  <button onClick={exit} id=\"chat-start\" className=\"btn btn btn-primary mt-6\">Выйти</button>\n        \n    </div>\n\n    </>\n  );\n}\n","import React from 'react';\n\n\n\nexport function Player(props: any) {\n  \n  return (\n      <div className=\"media-height p-1\">\n        <div className=\"media align-items-center mb-4\">\n            <div className=\"iq-profile-avatar status-online\">\n            <span className=\"badge badge-success ml-2\">{props.user.account}<div></div></span>\n              <img \n              className=\"rounded-circle avatar-50\" \n              src={props.user.sticker.get_url} alt=\"\" />\n\n            </div>\n            <div className=\"media-body ml-3\">\n              <h6 className=\"mb-0\"><a href=\"#\">Очков: {props.user.account}</a></h6>\n              <p className=\"mb-0\">{props.user.name}</p>\n            </div>\n        </div>\n      </div>\n  );\n}\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Player } from './Player';\nimport { Request } from '../Request';\nimport { SocketConnection } from '../SocketConnection';\nconst socket = SocketConnection.getInstance();\n\nexport function PlayerList(props: any) {\n  const [payers, setPlayers] = useState([]);\n\n  useEffect(() => {\n    socket.newMessage$.subscribe((payload: any) => {\n        if(payload.is_right) {\n            let req = new Request();\n            req.get('player/list').then((data) => {\n                setPlayers(data);\n            })             \n        }\n      });\n      socket.newUser$.subscribe((payload: any) => {\n            let req = new Request();\n            req.get('player/list').then((data) => {\n                setPlayers(data);\n            })             \n      });\n  },[])\n\n  useEffect(() => {\n    let req = new Request();\n    req.get('player/list').then((data) => {\n        setPlayers(data);\n    })    \n  },[]);\n  return (\n    <>\n      {payers.map((el,key) => <Player key={key} user={el} />)}\n      <div className=\"right-sidebar-toggle bg-primary mt-3\">\n        <i className=\"ri-arrow-left-line side-left-icon\"></i>\n        <i className=\"ri-arrow-right-line side-right-icon\"><span className=\"ml-3 d-inline-block\">Close Menu</span></i> \n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Question} from './components/Question';\nimport {LoginForm} from './components/LoginForm';\nimport { MessageForm } from './components/MessageForm';\nimport { MessageBox } from './components/MessageBox';\nimport { CurrentPlayer } from './components/CurrentPlayer';\nimport { PlayerList } from './components/PlayerList';\n\n\n\n\nif(localStorage.getItem('username')) { \n    console.log('init');\n    ReactDOM.render(\n        <React.StrictMode>\n          <Question />\n        </React.StrictMode>,\n        document.getElementById('currentQuestionBlock')\n      );\n      ReactDOM.render(\n        <React.StrictMode>\n          <MessageForm />\n        </React.StrictMode>,\n        document.getElementById('messageFormBlock')\n      );\n      ReactDOM.render(\n        <React.StrictMode>\n          <MessageBox />\n        </React.StrictMode>,\n        document.getElementById('messageBox')\n      );\n      ReactDOM.render(\n        <React.StrictMode>\n          <CurrentPlayer />\n        </React.StrictMode>,\n        document.getElementById('currentPlayerBlock')\n      );\n\n      ReactDOM.render(\n        <React.StrictMode>\n          <PlayerList />\n        </React.StrictMode>,\n        document.getElementById('playerListBlock')\n      );\n      \n} else {\n    ReactDOM.render(\n        <React.StrictMode>\n          <LoginForm />\n        </React.StrictMode>,\n        document.getElementById('#loginForm')\n      );\n}\n\n\n\n\n\n\n  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}